version: '3.8'

services:
  sharelatex:
    image: sharelatex/sharelatex:latest
    container_name: sharelatex-prod
    restart: unless-stopped
    depends_on:
      mongo:
        condition: service_healthy
      redis:
        condition: service_started
    ports:
      - "80:80"
      - "443:443"
    stop_grace_period: 60s
    volumes:
      - sharelatex_data:/var/lib/overleaf
      # Uncomment for SSL certificates
      # - ./ssl:/etc/nginx/ssl:ro
    environment:
      # Basic Configuration
      OVERLEAF_APP_NAME: "Overleaf Community Edition"
      OVERLEAF_MONGO_URL: mongodb://mongo/sharelatex
      
      # Redis Configuration
      OVERLEAF_REDIS_HOST: redis
      REDIS_HOST: redis
      
      # File Types
      ENABLED_LINKED_FILE_TYPES: 'project_file,project_output_file'
      
      # Features
      ENABLE_CONVERSIONS: 'true'
      EMAIL_CONFIRMATION_DISABLED: 'true'
      
      # Site Configuration - CHANGE THESE
      OVERLEAF_SITE_URL: ${OVERLEAF_SITE_URL:-http://localhost}
      OVERLEAF_NAV_TITLE: ${OVERLEAF_NAV_TITLE:-Overleaf Community Edition}
      OVERLEAF_ADMIN_EMAIL: ${OVERLEAF_ADMIN_EMAIL:-admin@example.com}
      
      # Email Configuration (Optional)
      OVERLEAF_EMAIL_FROM_ADDRESS: ${OVERLEAF_EMAIL_FROM_ADDRESS}
      OVERLEAF_EMAIL_SMTP_HOST: ${OVERLEAF_EMAIL_SMTP_HOST}
      OVERLEAF_EMAIL_SMTP_PORT: ${OVERLEAF_EMAIL_SMTP_PORT:-587}
      OVERLEAF_EMAIL_SMTP_SECURE: ${OVERLEAF_EMAIL_SMTP_SECURE:-false}
      OVERLEAF_EMAIL_SMTP_USER: ${OVERLEAF_EMAIL_SMTP_USER}
      OVERLEAF_EMAIL_SMTP_PASS: ${OVERLEAF_EMAIL_SMTP_PASS}
      OVERLEAF_EMAIL_SMTP_TLS_REJECT_UNAUTH: ${OVERLEAF_EMAIL_SMTP_TLS_REJECT_UNAUTH:-true}
      
      # Security
      OVERLEAF_SECURE_COOKIE: ${OVERLEAF_SECURE_COOKIE:-false}
      
      # Performance
      ENABLE_CRON_RESOURCE_DELETION: 'true'
      
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/status"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.overleaf.rule=Host(`${DOMAIN:-localhost}`)"
      - "traefik.http.routers.overleaf.tls=true"
      - "traefik.http.routers.overleaf.tls.certresolver=letsencrypt"

  mongo:
    image: mongo:6.0
    container_name: mongo-prod
    restart: unless-stopped
    command: '--replSet overleaf'
    volumes:
      - mongo_data:/data/db
      - ./bin/shared/mongodb-init-replica-set.js:/docker-entrypoint-initdb.d/mongodb-init-replica-set.js
    environment:
      MONGO_INITDB_DATABASE: sharelatex
    extra_hosts:
      - mongo:127.0.0.1
    healthcheck:
      test: echo 'db.stats().ok' | mongosh localhost:27017/test --quiet
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    
  redis:
    image: redis:6.2-alpine
    container_name: redis-prod
    restart: unless-stopped
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-}
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Optional: Traefik for automatic SSL with Let's Encrypt
  traefik:
    image: traefik:v3.0
    container_name: traefik
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"  # Traefik dashboard
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - traefik_data:/data
    command:
      - --api.dashboard=true
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --certificatesresolvers.letsencrypt.acme.tlschallenge=true
      - --certificatesresolvers.letsencrypt.acme.email=${ACME_EMAIL:-admin@example.com}
      - --certificatesresolvers.letsencrypt.acme.storage=/data/acme.json
      - --entrypoints.web.http.redirections.entrypoint.to=websecure
      - --entrypoints.web.http.redirections.entrypoint.scheme=https
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.rule=Host(`traefik.${DOMAIN:-localhost}`)"
      - "traefik.http.routers.traefik.tls=true"
      - "traefik.http.routers.traefik.tls.certresolver=letsencrypt"
      - "traefik.http.routers.traefik.service=api@internal"
    profiles:
      - traefik

  # Optional: Watchtower for automatic updates
  watchtower:
    image: containrrr/watchtower
    container_name: watchtower
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_POLL_INTERVAL=86400  # Check daily
      - WATCHTOWER_INCLUDE_STOPPED=true
    profiles:
      - watchtower

volumes:
  sharelatex_data:
    driver: local
  mongo_data:
    driver: local
  redis_data:
    driver: local
  traefik_data:
    driver: local

networks:
  default:
    name: overleaf-network
